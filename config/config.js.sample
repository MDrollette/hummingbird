//fs is needed to read in key and cert files when using https
//var fs = require('fs');


module.exports = config = {
  //if turned on, both the tracking pixel and dashboard will be served under https
  "enable_https": false,
  //"https_key": fs.readFileSync("/path/to/key.pem"),
  //"https_cert": fs.readFileSync("/path/to/cert.pem"),
  
  
  //server config for the tracking pixel
  //if an ip is provided, the server will only listen on that ip
  "tracking_port" : 8000,
  "tracking_hostname" : false,

  //the tracking server will ignore any pixels from ips in the blacklist
  "ip_blacklist" : [],

  //server config for the dashboard server
  //this just serves up static files out of the /public directory
  //this can be hosted anywhere are doesn't need to be done through node.js
  "enable_dashboard" : true,
  "dashboard_port" : 8080,
  "dashboard_hostname" : false,

  //anyone with access to the websocket can view all analytics data,
  //so make sure this is protected if you care about privacy
  //if port is set to false, socket.io will listen to the dashboard server or
  //the tracking server if the dashboard is disabled
  "websocket_port" : false,
  "websocket_hostname" : false,
  "websocket_log_level" : 2,

  //MongoDB config
  "mongo_port" : 27017,
  "mongo_hostname" : "localhost",

  //udp config
  //incomming data to the udp server will behave just like an incomming tracking pixel
  "enable_udp": true,
  "udp_port" : 8000,
  "udp_hostname" : "127.0.0.1",
  "udp_log" : false,
  
  //general MongoDB config
  "database_name": "hummingbird",
  
  //config for the visits MongoDB collection (i.e. the one that records every tracking pixel request)
  "visits_collection": "visits",
  "visits_collection_options": {
    capped: true,
    size: 1000000000  //keep latest 100MB of visits data
  },
  
  //config for other MongoDB collections (ones used to store aggregate metric data)
  "enabled_minute_collection": true,
  "minute_collection": "metrics_minute",
  "minute_collection_options": {
    capped: true,
    size: 1000000000, //keep latest 100MB of minute data
    max: 1440 //keep at most a day's worth of minute data
  },
  "hour_collection": "metrics_hour",
  "hour_collection_options": {},
  "day_collection": "metrics_day",
  "day_collection_options": {},

  //every minute, hummingbird can log the aggregate data it is storing in MongoDB
  "log_metric_data": false
}
